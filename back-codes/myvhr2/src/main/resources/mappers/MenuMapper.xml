<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mayao.mapper.MenuMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.mayao.entity.Menu">
        <id column="id" property="id"/>
        <result column="url" property="url"/>
        <result column="path" property="path"/>
        <result column="component" property="component"/>
        <result column="name" property="name"/>
        <result column="iconCls" property="iconCls"/>
        <result column="keepAlive" property="keepAlive"/>
        <result column="requireAuth" property="requireAuth"/>
        <result column="parentId" property="parentId"/>
        <result column="enabled" property="enabled"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id
        , url, path, component, name, iconCls, keepAlive, requireAuth, parentId, enabled
    </sql>

    <resultMap id="menusByHrId" type="menu" extends="BaseResultMap">
        <collection property="children" ofType="menu" javaType="list">
            <id column="id2" property="id"/>
            <result column="name2" property="name"/>
            <result column="component2" property="component"/>
            <result column="enabled2" property="enabled"/>
            <result column="iconCls2" property="iconCls"/>
            <result column="keepAlive2" property="keepAlive"/>
            <result column="parentId2" property="parentId"/>
            <result column="requireAuth2" property="requireAuth"/>
            <result column="path2" property="path"/>
        </collection>
    </resultMap>

    <resultMap id="menusWithRoles" type="menu" extends="BaseResultMap">
        <collection property="roles" ofType="role">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
            <result column="rnameZh" property="nameZh"/>
        </collection>
    </resultMap>

    <resultMap id="treeMap" type="menu">
        <id column="id1" property="id"/>
        <result column="name1" property="name"/>
        <collection property="children" ofType="menu" javaType="list">
            <id column="id2" property="id"/>
            <result column="name2" property="name"/>
            <collection property="children" ofType="menu" javaType="list">
                <id column="id3" property="id"/>
                <result column="name3" property="name"/>
            </collection>
        </collection>
    </resultMap>


    <!--
        ! 为什么是 m2.id in (子查询),而不是m1.id in (子查询)
        ? 此时m1和m2已经进行了连接，在查询结果中m1.id只保留了有子菜单的，若是m1.id in (子查询) 则得不到正确结果
        SELECT m1.*,
               m2.id          as id2,
               m2.`name`      as name2,
               m2.component   as component2,
               m2.enabled     as enabled2,
               m2.iconCls     as iconCls2,
               m2.keepAlive   as keepAlive2,
               m2.parentId    as parentId2,
               m2.requireAuth as requireAuth2,
               m2.path        as path2
        FROM menu m1
        LEFT JOIN menu m2 ON m1.id= m2.parentId
        WHERE m2.id in (
            SELECT mr.mid FROM hr_role hrr
            INNER JOIN menu_role mr ON mr.rid=hrr.rid
            WHERE hrr.hrid=3
        );
    -->
    <select id="getMenusByHrId" parameterType="Integer" resultMap="menusByHrId">
        SELECT m1.*,
               m2.id          as id2,
               m2.`name`      as name2,
               m2.component   as component2,
               m2.enabled     as enabled2,
               m2.iconCls     as iconCls2,
               m2.keepAlive   as keepAlive2,
               m2.parentId    as parentId2,
               m2.requireAuth as requireAuth2,
               m2.path        as path2
        from menu m1,
             menu m2,
             menu_role mr,
             hr_role hrr
        WHERE m1.id = m2.parentId
          and mr.mid = m2.id
          and hrr.rid = mr.rid
          and m2.enabled = true
          and hrr.hrid = #{id}
        ORDER BY m1.id
    </select>

    <select id="getMenusWithRoles" resultMap="menusWithRoles">
        SELECT m.*, r.id as rid, r.`name` as rname, r.nameZh as rnameZh
        from menu m
                 INNER JOIN menu_role mr ON mr.mid = m.id
                 INNER JOIN role r ON mr.rid = r.id
        ORDER BY m.id
    </select>

    <!--
        ! 为什么会封装成一个树形结构？
        ? 在resultMap中,通过collection节点来描述集合的映射关系。
        ? 在"一对多"的关系中,在映射时会自动将"一"的一方数据集合并,然后将"多"的一方放到集合中,能实现这一点,靠的就是id标签。
    -->
    <select id="findAllMenus" resultMap="treeMap">
        SELECT m1.id as id1, m1.name as name1, m2.id as id2, m2.name as name2, m3.id as id3, m3.name as name3
        FROM menu m1,
             menu m2,
             menu m3
        WHERE m1.id = m2.parentId
          and m2.id = m3.parentId
          AND m3.enabled = true
    </select>

    <select id="getMidsByRid" resultType="Integer">
        SELECT m.id
        FROM role r
                 INNER JOIN menu_role mr ON mr.rid = r.id
                 INNER JOIN menu m ON mr.mid = m.id
        WHERE r.id = #{rid}
    </select>


</mapper>
